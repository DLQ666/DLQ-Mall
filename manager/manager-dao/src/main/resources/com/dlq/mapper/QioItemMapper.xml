<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlq.mapper.QioItemMapper">
	<resultMap id="BaseResultMap" type="com.dlq.pojo.QioItem">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="sell_point" property="sellPoint" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="BIGINT" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="image" property="image" jdbcType="VARCHAR" />
		<result column="cid" property="cid" jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="TINYINT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, title, sell_point, price, num, image, cid, status
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.dlq.pojo.QioItemExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from qio_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from qio_item
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from qio_item
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.dlq.pojo.QioItemExample">
		delete from qio_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.dlq.pojo.QioItem">
		<selectKey resultType="java.lang.Long" order="AFTER"	keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into qio_item (id, title, sell_point,
		price, num, image, cid,
		status)
		values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR},
		#{sellPoint,jdbcType=VARCHAR},
		#{price,jdbcType=BIGINT}, #{num,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR},
		#{cid,jdbcType=BIGINT},
		#{status,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="com.dlq.pojo.QioItem">
		insert into qio_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="sellPoint != null">
				sell_point,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="num != null">
				num,
			</if>
			<if test="image != null">
				image,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="sellPoint != null">
				#{sellPoint,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=BIGINT},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				#{image,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.dlq.pojo.QioItemExample"
		resultType="java.lang.Integer">
		select count(*) from qio_item
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update qio_item
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.sellPoint != null">
				sell_point = #{record.sellPoint,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=BIGINT},
			</if>
			<if test="record.num != null">
				num = #{record.num,jdbcType=INTEGER},
			</if>
			<if test="record.image != null">
				image = #{record.image,jdbcType=VARCHAR},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=BIGINT},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=TINYINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update qio_item
		set id = #{record.id,jdbcType=BIGINT},
		title = #{record.title,jdbcType=VARCHAR},
		sell_point = #{record.sellPoint,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=BIGINT},
		num = #{record.num,jdbcType=INTEGER},
		image = #{record.image,jdbcType=VARCHAR},
		cid = #{record.cid,jdbcType=BIGINT},
		status = #{record.status,jdbcType=TINYINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.dlq.pojo.QioItem">
		update qio_item
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="sellPoint != null">
				sell_point = #{sellPoint,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=BIGINT},
			</if>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				image = #{image,jdbcType=VARCHAR},
			</if>
			<if test="cid != null">
				cid = #{cid,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dlq.pojo.QioItem">
		update qio_item
		set title = #{title,jdbcType=VARCHAR},
		sell_point = #{sellPoint,jdbcType=VARCHAR},
		price = #{price,jdbcType=BIGINT},
		num = #{num,jdbcType=INTEGER},
		image = #{image,jdbcType=VARCHAR},
		cid = #{cid,jdbcType=BIGINT},
		status = #{status,jdbcType=TINYINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>
